$(function () {

  $('.header__slider').slick({
    infinite: true,
    arrows: false,
    dots: true,
    vertical: true,
    dotsClass: 'header-dots', // меняем класс слайдер кнопок на свой (вместо slick-dots будет header-dots) во избежании конфликтов классов при наличии еще одного слайдера на странице
    autoplay: 1500,
    responsive: [
      {
        breakpoint: 460,
        settings: {
          dots: false,
        }
      }
    ]
  });

  $('.menu__burger').on('click', function () {
    $('.menu__list').slideToggle(); // метод jquery (там в документашке к jquery, можно все это изучить)

    // так же здесь есть косяк, когда мы нажимаем на кнопку, а потом увеличиваем экран то отключенное ранее меню не появляется, потому что jqury прописывает свои стили в html документ, и по возвращению экрана в исходное состояние стили заданные элементу в css не срабатывают, так не могут перебить стили уже заднные в html, тоесть проблему приоритетности мы можем решить следующим образом: нужно создать новый медиазапрос только с минимальной шириной, потому что, если у нас при МАКСИМАЛЬНОЙ ширине в 580px включается свойство display: none; то нужно сделать так что бы при МИНИМАЛЬНОЙ ширине в 580px наше свойство  display: none; заданное с помощью jquery переключалось на то которое было заданно изначально в css (см. css) и там у нас у элемента display: flex; и соответственно так же указываем это при создании экрана с минимальной шириной в 580px в файле css -->
    /*
     @media(min-width: 580px) {
      .menu__list {
        display: flex;
      }
    }
    */
  });

})